version: 2.1

jobs:
  test:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout

      # Instalar dependencias adicionales
      - run:
          name: Install additional dependencies
          command: |
            sudo apt-get update && sudo apt-get install -y \
            sqlite3 \
            curl \
            wget \
            git \
            unzip

      # Instalar dependencias de Python
      - run:
          name: Install Python dependencies
          command: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

      # Ejecutar pruebas
      - run:
          name: Run tests
          command: |
            python -m unittest tests.py

  lint:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout

      # Instalar dependencias adicionales
      - run:
          name: Install additional dependencies
          command: |
            sudo apt-get update && sudo apt-get install -y \
            sqlite3 \
            curl \
            wget \
            git \
            unzip

      # Instalar flake8 para el análisis estático de código
      - run:
          name: Install flake8
          command: pip install flake8

      # Análisis estático de código
      - run:
          name: Static code analysis
          command: flake8 .

  integration_test:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout

      # Instalar dependencias adicionales
      - run:
          name: Install additional dependencies
          command: |
            sudo apt-get update && sudo apt-get install -y \
            sqlite3 \
            curl \
            wget \
            git \
            unzip

      # Instalar dependencias de Python
      - run:
          name: Install Python dependencies
          command: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

      # Ejecutar pruebas de integración
      - run:
          name: Run integration tests
          command: |
            # Aquí ejecuta tus pruebas de integración
            python -m unittest integration_tests.py

workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - lint
      - integration_test:
          requires:
            - test
            - lint
